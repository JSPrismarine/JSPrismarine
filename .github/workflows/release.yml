name: Release
on:
    workflow_dispatch:
        inputs:
            version:
                description: "Version (v0.1.0-rc.17)"
                required: true
            prerelease:
                description: "Pre-release?"
                required: false

jobs:
    create-release:
        runs-on: ubuntu-latest
        env:
            TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - run: npm install
            - run: npm run build

            - run: npm prune --production
            - run: npm install -g pkg
            - run: npm run package

            - name: Changelog
              uses: scottbrenner/generate-changelog-action@master
              id: changelog
              env:
                  REPO: ${{ github.repository }}

            - name: Create Release
              id: create_release
              uses: zendesk/action-create-release@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.event.inputs.version }}
                  release_name: ${{ github.event.inputs.version }}
                  body: |
                      ${{ steps.Changelog.outputs.changelog }}
                  prerelease: ${{ github.event.inputs.prerelease }}

            - name: Upload Linux Release Asset
              id: upload-linux-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: builds/monorepo-linux
                  asset_name: prismarine-linux
                  asset_content_type: application/bin

            - name: Upload MacOS Release Asset
              id: upload-macos-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: builds/monorepo-macos
                  asset_name: prismarine-macos
                  asset_content_type: application/bin

            - name: Upload Win32 Release Asset
              id: upload-win32-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: builds/monorepo-win.exe
                  asset_name: prismarine-win.exe
                  asset_content_type: application/exe
